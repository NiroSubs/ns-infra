AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFront distribution with SSL for NiroSubs'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, stg, prod]
    Description: Environment name (for DNS subdomain)
  
  S3BucketName:
    Type: String
    Default: nirosubs-frontend
    Description: S3 bucket name for frontend assets
  
  CertificateArn:
    Type: String
    Description: ACM Certificate ARN (must be in us-east-1)
    Default: arn:aws:acm:us-east-1:816454053517:certificate/f301d219-515c-4e8c-8cf9-f36b42af428a
  
  DomainName:
    Type: String
    Default: visualforge.ai
    Description: Base domain name

Conditions:
  IsProduction: !Equals [!Ref Environment, prod]
  IsNotProduction: !Not [!Equals [!Ref Environment, prod]]

Resources:
  # S3 Bucket for Frontend
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, HEAD]
            AllowedOrigins: ['*']
            MaxAge: 3600
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: NiroSubs

  # S3 Bucket Policy for CloudFront
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Statement:
          - Sid: AllowCloudFrontAccess
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}'
            Action: 's3:GetObject'
            Resource: !Sub '${FrontendBucket.Arn}/*'

  # CloudFront Origin Access Identity
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'OAI for ${S3BucketName}'

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: !Sub 'NiroSubs Frontend - ${Environment}'
        DefaultRootObject: index.html
        
        # Custom domain aliases
        Aliases:
          - !If
            - IsProduction
            - !Ref DomainName
            - !Sub '${Environment}.${DomainName}'
          - !If
            - IsProduction
            - !Sub 'www.${DomainName}'
            - !Sub 'app-${Environment}.${DomainName}'
        
        # SSL Certificate
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        
        # Origins
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt FrontendBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
          
          # API Gateway origin
          - Id: ApiOrigin
            DomainName: !Sub '${ApiGatewayId}.execute-api.${AWS::Region}.amazonaws.com'
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
        
        # Default behavior (S3)
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf  # Managed-CORS-S3Origin
        
        # API behavior
        CacheBehaviors:
          - PathPattern: '/api/*'
            TargetOriginId: ApiOrigin
            ViewerProtocolPolicy: https-only
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - PATCH
              - DELETE
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # Managed-CachingDisabled
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac  # Managed-AllViewerExceptHostHeader
        
        # Error pages
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 0
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 0
        
        PriceClass: PriceClass_100
        
        Tags:
          - Key: Environment
            Value: !Ref Environment
          - Key: Project
            Value: NiroSubs

  # Import API Gateway ID from API stack
  ApiGatewayId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /nirosubs/api-gateway-id

Outputs:
  CloudFrontDistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref CloudFrontDistribution
    Export:
      Name: cloudfront-distribution-id
  
  CloudFrontDomainName:
    Description: CloudFront Distribution Domain Name
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: cloudfront-domain-name
  
  CloudFrontURL:
    Description: CloudFront Distribution URL with custom domain
    Value: !If
      - IsProduction
      - !Sub 'https://${DomainName}'
      - !Sub 'https://${Environment}.${DomainName}'
    Export:
      Name: cloudfront-url
  
  S3BucketName:
    Description: S3 Bucket Name
    Value: !Ref FrontendBucket
    Export:
      Name: frontend-bucket-name